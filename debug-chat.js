// debug-chat.js - ุชุตุญูุญ ูุดููุฉ ุงูุดุงุช
const { GoogleGenerativeAI } = require('@google/generative-ai');

// ููุชุงุญ API ุงูุฎุงุต ุจู
const API_KEY = 'AIzaSyACEJkJRFoCN666hCHEWs9MvbKmVngwTWU';

// ุจูุงูุงุช ุฑุญูุงุช ููููุฉ ููุงุฎุชุจุงุฑ
const sampleFlights = [
  {
    id: '1',
    flightNumber: 'SV-123',
    airline: 'Saudi Airlines',
    departure: 'Riyadh',
    arrival: 'Jeddah',
    date: '2024-01-15',
    time: '10:00',
    price: 500,
    status: 'Available'
  },
  {
    id: '2',
    flightNumber: 'EK-456',
    airline: 'Emirates',
    departure: 'Dubai',
    arrival: 'Riyadh',
    date: '2024-01-16',
    time: '14:30',
    price: 800,
    status: 'Available'
  },
  {
    id: '3',
    flightNumber: 'QR-789',
    airline: 'Qatar Airways',
    departure: 'Doha',
    arrival: 'Jeddah',
    date: '2024-01-17',
    time: '09:15',
    price: 600,
    status: 'Available'
  }
];

async function debugChat() {
  try {
    console.log('๐ ุชุตุญูุญ ูุดููุฉ ุงูุดุงุช...\n');
    
    // ุงุฎุชุจุงุฑ 1: ุชุญููู ุงูุงุณุชุนูุงู
    console.log('๐ ุงุฎุชุจุงุฑ 1: ุชุญููู ุงูุงุณุชุนูุงู "ุณุงุนุฏูู ูู ุงุฎุชูุงุฑ ุฑุญูุฉ"');
    
    const genAI = new GoogleGenerativeAI(API_KEY);
    const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    
    const prompt = `
    ุชุญููู ุงุณุชุนูุงู ุฑุญูุฉ ุทูุฑุงู ูุชุญูููู ุฅูู ูุนุงููุฑ ุจุญุซ.
    
    ุงุณุชุนูุงู ุงููุณุชุฎุฏู: "ุณุงุนุฏูู ูู ุงุฎุชูุงุฑ ุฑุญูุฉ"
    
    ูู ุจุชุญููู ุงููุต ูุงุณุชุฎุฑุงุฌ ุงููุนูููุงุช ุงูุชุงููุฉ:
    - ูุฏููุฉ ุงููุบุงุฏุฑุฉ (departure)
    - ูุฏููุฉ ุงููุตูู (arrival)
    - ุงูุชุงุฑูุฎ (date) - ุฅุฐุง ุชู ุชุญุฏูุฏู
    - ุงูููุช (time) - ุฅุฐุง ุชู ุชุญุฏูุฏู
    - ุดุฑูุฉ ุงูุทูุฑุงู (airline) - ุฅุฐุง ุชู ุชุญุฏูุฏูุง
    - ุงูุณุนุฑ ุงูุฃูุตู (maxPrice) - ุฅุฐุง ุชู ุชุญุฏูุฏู
    
    ุฃุนุฏ ุงููุชูุฌุฉ ูู JSON object ููุท ุจุฏูู ุฃู ุชูุณูู ุฅุถุงูู ุฃู ุชุนูููุงุช:
    {
      "departure": "ุงุณู ุงููุฏููุฉ ุฃู null",
      "arrival": "ุงุณู ุงููุฏููุฉ ุฃู null", 
      "date": "ุงูุชุงุฑูุฎ ุฃู null",
      "time": "ุงูููุช ุฃู null",
      "airline": "ุงุณู ุงูุดุฑูุฉ ุฃู null",
      "maxPrice": "ุงูุณุนุฑ ุฃู null"
    }
    
    ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ูุนูููุงุช ูุญุฏุฏุฉุ ุงุณุชุฎุฏู null.
    ูุง ุชุถูู ุฃู ูุตูุต ุฃุฎุฑู ุฃู ุชูุณูู Markdown.
    `;
    
    const result = await model.generateContent(prompt);
    const response = await result.response;
    const text = response.text();
    
    console.log('๐ค ุฑุฏ Gemini:', text);
    
    // ูุนุงูุฌุฉ JSON
    let cleanText = text.trim();
    if (cleanText.startsWith('```json')) {
      cleanText = cleanText.replace(/^```json\s*/, '').replace(/\s*```$/, '');
    } else if (cleanText.startsWith('```')) {
      cleanText = cleanText.replace(/^```\s*/, '').replace(/\s*```$/, '');
    }
    
    console.log('\n๐งน ุงููุต ุงููุธูู:', cleanText);
    
    // ุชุญููู JSON
    try {
      const parsed = JSON.parse(cleanText);
      console.log('\nโ ุชู ุชุญููู JSON ุจูุฌุงุญ!');
      console.log('๐ ุงููุชุงุฆุฌ:');
      console.log('- ุงููุบุงุฏุฑุฉ:', parsed.departure);
      console.log('- ุงููุตูู:', parsed.arrival);
      console.log('- ุงูุชุงุฑูุฎ:', parsed.date);
      console.log('- ุงูููุช:', parsed.time);
      console.log('- ุดุฑูุฉ ุงูุทูุฑุงู:', parsed.airline);
      console.log('- ุงูุณุนุฑ ุงูุฃูุตู:', parsed.maxPrice);
      
      // ุงุฎุชุจุงุฑ 2: ุงูุจุญุซ ูู ุงูุฑุญูุงุช
      console.log('\n๐ ุงุฎุชุจุงุฑ 2: ุงูุจุญุซ ูู ุงูุฑุญูุงุช');
      
      let filteredFlights = sampleFlights;
      
      if (parsed.departure) {
        filteredFlights = filteredFlights.filter(f => 
          f.departure.toLowerCase().includes(parsed.departure.toLowerCase())
        );
      }
      
      if (parsed.arrival) {
        filteredFlights = filteredFlights.filter(f => 
          f.arrival.toLowerCase().includes(parsed.arrival.toLowerCase())
        );
      }
      
      if (parsed.airline) {
        filteredFlights = filteredFlights.filter(f => 
          f.airline.toLowerCase().includes(parsed.airline.toLowerCase())
        );
      }
      
      if (parsed.maxPrice) {
        filteredFlights = filteredFlights.filter(f => 
          f.price <= parseInt(parsed.maxPrice)
        );
      }
      
      console.log(`\n๐ฏ ูุชุงุฆุฌ ุงูุจุญุซ: ${filteredFlights.length} ุฑุญูุฉ`);
      filteredFlights.forEach(f => {
        console.log(`- ${f.airline}: ${f.departure} โ ${f.arrival} | ${f.date} | ${f.price} ุฑูุงู`);
      });
      
      // ุงุฎุชุจุงุฑ 3: ุจูุงุก ุฑุฏ ุงูุดุงุช
      console.log('\n๐ฌ ุงุฎุชุจุงุฑ 3: ุจูุงุก ุฑุฏ ุงูุดุงุช');
      
      let botResponse = '';
      if (filteredFlights.length > 0) {
        botResponse = `๐ฏ **ูุชุงุฆุฌ ุงูุจุญุซ ุงูุฐูู ูู Gemini AI:**\n\n`;
        botResponse += `โ **ุชู ุงูุนุซูุฑ ุนูู ${filteredFlights.length} ุฑุญูุฉ:**\n\n`;
        
        if (parsed.departure) {
          botResponse += `๐ซ **ูู:** ${parsed.departure}\n`;
        }
        if (parsed.arrival) {
          botResponse += `๐ฌ **ุฅูู:** ${parsed.arrival}\n`;
        }
        if (parsed.airline) {
          botResponse += `โ๏ธ **ุดุฑูุฉ ุงูุทูุฑุงู:** ${parsed.airline}\n`;
        }
        if (parsed.maxPrice) {
          botResponse += `๐ฐ **ุงูุณุนุฑ ุงูุฃูุตู:** ${parsed.maxPrice} ุฑูุงู\n`;
        }
        
        botResponse += `\n๐ **ุฃูุถู ุงููุชุงุฆุฌ:**\n`;
      } else {
        botResponse = `โ **ูู ุฃุฌุฏ ุฑุญูุงุช ุชูุงุณุจ ุทูุจู**\n\n`;
        botResponse += `**Gemini AI ูููู:** ุฌุฑุจ ุชุบููุฑ ูุนุงููุฑ ุงูุจุญุซ ุฃู ุงุณุฃููู ุจุทุฑููุฉ ุฃุฎุฑู.\n\n`;
        botResponse += `**ูุตุงุฆุญ:**\n`;
        botResponse += `โข ุงุณุชุฎุฏู ุฃุณูุงุก ุงููุฏู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุฃู ุงูุฅูุฌููุฒูุฉ\n`;
        botResponse += `โข ุญุฏุฏ ุชุงุฑูุฎุงู ูุญุฏุฏุงู (ูุซู: 2025-08-25)\n`;
        botResponse += `โข ุงุฐูุฑ ุดุฑูุฉ ุงูุทูุฑุงู ุงูููุถูุฉ\n`;
        botResponse += `โข ุญุฏุฏ ูุทุงู ุงูุณุนุฑ (ูุซู: ุฃูู ูู 1000 ุฑูุงู)`;
      }
      
      console.log('\n๐ค ุฑุฏ ุงูุดุงุช:');
      console.log(botResponse);
      
      console.log('\n๐ ุชุตุญูุญ ุงูุดุงุช ุชู ุจูุฌุงุญ!');
      console.log('โ Gemini API ูุนูู');
      console.log('โ ุชุญููู JSON ูุนูู');
      console.log('โ ุงูุจุญุซ ูู ุงูุฑุญูุงุช ูุนูู');
      console.log('โ ุจูุงุก ุฑุฏ ุงูุดุงุช ูุนูู');
      
    } catch (parseError) {
      console.log('\nโ ูุดู ูู ุชุญููู JSON:', parseError.message);
      console.log('๐ ุงููุต ุงูุฃุตูู:', text);
    }
    
  } catch (error) {
    console.error('\nโ ุฎุทุฃ ูู ุชุตุญูุญ ุงูุดุงุช:', error.message);
  }
}

// ุชุดุบูู ุงูุชุตุญูุญ
console.log('๐ ุจุฏุก ุชุตุญูุญ ูุดููุฉ ุงูุดุงุช...\n');
debugChat();








